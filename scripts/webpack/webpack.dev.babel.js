/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const webpack = require('webpack');
const ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = require('./webpack.base.babel')({
  mode: 'development',

  // Add hot reloading in development
  entry: [
    require.resolve('react-app-polyfill/ie11'),
    'webpack-hot-middleware/client?reload=true',
    path.join(process.cwd(), 'src/bootstrap.js'), // Start with js/app.js
  ],

  // Don't use hashes in dev mode for better performance
  output: {
    publicPath: 'http://localhost:3000/',
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
  },

  optimization: {
    minimize: false,
    runtimeChunk: {
      name: entrypoint => `runtime-${entrypoint.name}`,
    },
    /*
    splitChunks: {
      chunks: 'all',
    },
    **/
  },

  // Add development plugins
  plugins: [
    new ModuleFederationPlugin({
      name: 'onyx',
      library: { type: 'var', name: 'onyx' },
      filename: 'remoteEntry.js',
      exposes: {
        utils: path.resolve(process.cwd(), './src/utils/index.js'),
        components: path.resolve(process.cwd(), './src/components/index.js'),
      },
      shared: ['react', 'react-dom', 'react-intl', 'react-redux', 'redux', 'reselect', "react-materialize", "materialize-css"],
    }),
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
      template: 'src/index.html',
    }),
  ],

  // Emit a source map for easier debugging
  // See https://webpack.js.org/configuration/devtool/#devtool
  devtool: 'eval-source-map',

  performance: {
    hints: false,
  },
  externals: {},
  alias: {
    '@onyx': path.resolve(process.cwd(), './src'),
    '@neurons': path.resolve(process.cwd(), './neurons'),
  },
});
